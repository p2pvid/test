// package: buildinfo.rpc
// file: buildinfo/rpc/rpc.proto

import * as jspb from "google-protobuf";

export class BuildInfoRequest extends jspb.Message {
  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BuildInfoRequest.AsObject;
  static toObject(includeInstance: boolean, msg: BuildInfoRequest): BuildInfoRequest.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BuildInfoRequest, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BuildInfoRequest;
  static deserializeBinaryFromReader(message: BuildInfoRequest, reader: jspb.BinaryReader): BuildInfoRequest;
}

export namespace BuildInfoRequest {
  export type AsObject = {
  }
}

export class BuildInfoResponse extends jspb.Message {
  getGitCommit(): string;
  setGitCommit(value: string): void;

  getGitBranch(): string;
  setGitBranch(value: string): void;

  getGitState(): string;
  setGitState(value: string): void;

  getGitSummary(): string;
  setGitSummary(value: string): void;

  getBuildDate(): string;
  setBuildDate(value: string): void;

  getVersion(): string;
  setVersion(value: string): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): BuildInfoResponse.AsObject;
  static toObject(includeInstance: boolean, msg: BuildInfoResponse): BuildInfoResponse.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: BuildInfoResponse, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): BuildInfoResponse;
  static deserializeBinaryFromReader(message: BuildInfoResponse, reader: jspb.BinaryReader): BuildInfoResponse;
}

export namespace BuildInfoResponse {
  export type AsObject = {
    gitCommit: string,
    gitBranch: string,
    gitState: string,
    gitSummary: string,
    buildDate: string,
    version: string,
  }
}

