import { ContextInterface } from '@textile/context';
import { GrpcConnection } from '@textile/grpc-connection';
import { AddrsResponse, InfoResponse, ListDealRecordsConfig, ListRetrievalDealRecordsResponse, ListStorageDealRecordsResponse, NewAddrResponse, SendFilResponse, ShowAllResponse } from '@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb';
import { CheckResponse } from '@textile/grpc-powergate-client/dist/health/rpc/rpc_pb';
import { ConnectednessResponse, FindPeerResponse, PeersResponse } from '@textile/grpc-powergate-client/dist/net/rpc/rpc_pb';
import { BalanceResponse } from '@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb';
/**
 * @internal
 */
export declare function health(api: GrpcConnection, ctx?: ContextInterface): Promise<CheckResponse.AsObject>;
/**
 * @internal
 */
export declare function peers(api: GrpcConnection, ctx?: ContextInterface): Promise<PeersResponse.AsObject>;
/**
 * @internal
 */
export declare function findPeer(api: GrpcConnection, peerId: string, ctx?: ContextInterface): Promise<FindPeerResponse.AsObject>;
/**
 * @internal
 */
export declare function connectedness(api: GrpcConnection, peerId: string, ctx?: ContextInterface): Promise<ConnectednessResponse.AsObject>;
/**
 * @internal
 */
export declare function addrs(api: GrpcConnection, ctx?: ContextInterface): Promise<AddrsResponse.AsObject>;
/**
 * @internal
 */
export declare function newAddr(api: GrpcConnection, name: string, type: 'bls' | 'secp256k1', makeDefault: boolean, ctx?: ContextInterface): Promise<NewAddrResponse.AsObject>;
/**
 * @internal
 */
export declare function info(api: GrpcConnection, ctx?: ContextInterface): Promise<InfoResponse.AsObject>;
/**
 * @internal
 */
export declare function show(api: GrpcConnection, cid: string, ctx?: ContextInterface): Promise<SendFilResponse.AsObject>;
/**
 * @internal
 */
export declare function showAll(api: GrpcConnection, ctx?: ContextInterface): Promise<ShowAllResponse.AsObject>;
/**
 * @internal
 */
export declare function listStorageDealRecords(api: GrpcConnection, config: ListDealRecordsConfig.AsObject, ctx?: ContextInterface): Promise<ListStorageDealRecordsResponse.AsObject>;
/**
 * @internal
 */
export declare function listRetrievalDealRecords(api: GrpcConnection, config: ListDealRecordsConfig.AsObject, ctx?: ContextInterface): Promise<ListRetrievalDealRecordsResponse.AsObject>;
/**
 * @internal
 */
export declare function balance(api: GrpcConnection, address: string, ctx?: ContextInterface): Promise<BalanceResponse.AsObject>;
