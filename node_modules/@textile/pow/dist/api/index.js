"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.balance = exports.listRetrievalDealRecords = exports.listStorageDealRecords = exports.showAll = exports.show = exports.info = exports.newAddr = exports.addrs = exports.connectedness = exports.findPeer = exports.peers = exports.health = void 0;
const rpc_pb_1 = require("@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb");
const rpc_pb_service_1 = require("@textile/grpc-powergate-client/dist/ffs/rpc/rpc_pb_service");
const rpc_pb_2 = require("@textile/grpc-powergate-client/dist/health/rpc/rpc_pb");
const rpc_pb_service_2 = require("@textile/grpc-powergate-client/dist/health/rpc/rpc_pb_service");
const rpc_pb_3 = require("@textile/grpc-powergate-client/dist/net/rpc/rpc_pb");
const rpc_pb_service_3 = require("@textile/grpc-powergate-client/dist/net/rpc/rpc_pb_service");
const rpc_pb_4 = require("@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb");
const rpc_pb_service_4 = require("@textile/grpc-powergate-client/dist/wallet/rpc/rpc_pb_service");
const loglevel_1 = __importDefault(require("loglevel"));
const logger = loglevel_1.default.getLogger('pow-api');
/**
 * @internal
 */
function health(api, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('health request');
        const res = yield api.unary(rpc_pb_service_2.RPCService.Check, new rpc_pb_2.CheckRequest(), ctx);
        return res.toObject();
    });
}
exports.health = health;
/**
 * @internal
 */
function peers(api, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('peers request');
        const res = yield api.unary(rpc_pb_service_3.RPCService.Peers, new rpc_pb_3.PeersRequest(), ctx);
        return res.toObject();
    });
}
exports.peers = peers;
/**
 * @internal
 */
function findPeer(api, peerId, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('find peer request');
        const req = new rpc_pb_3.FindPeerRequest();
        req.setPeerId(peerId);
        const res = yield api.unary(rpc_pb_service_3.RPCService.FindPeer, req, ctx);
        return res.toObject();
    });
}
exports.findPeer = findPeer;
/**
 * @internal
 */
function connectedness(api, peerId, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('find peer request');
        const req = new rpc_pb_3.ConnectednessRequest();
        req.setPeerId(peerId);
        const res = yield api.unary(rpc_pb_service_3.RPCService.Connectedness, req, ctx);
        return res.toObject();
    });
}
exports.connectedness = connectedness;
/**
 * @internal
 */
function addrs(api, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('addrs request');
        const res = yield api.unary(rpc_pb_service_1.RPCService.Addrs, new rpc_pb_1.AddrsRequest(), ctx);
        return res.toObject();
    });
}
exports.addrs = addrs;
/**
 * @internal
 */
function newAddr(api, name, type, makeDefault, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        logger.debug('newAddr request');
        const req = new rpc_pb_1.NewAddrRequest();
        req.setName(name);
        req.setAddressType(type);
        req.setMakeDefault(makeDefault);
        const res = yield api.unary(rpc_pb_service_1.RPCService.NewAddr, req, ctx);
        return res.toObject();
    });
}
exports.newAddr = newAddr;
/**
 * @internal
 */
function info(api, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const res = yield api.unary(rpc_pb_service_1.RPCService.Info, new rpc_pb_1.InfoRequest(), ctx);
        return res.toObject();
    });
}
exports.info = info;
/**
 * @internal
 */
function show(api, cid, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const req = new rpc_pb_1.ShowRequest();
        req.setCid(cid);
        const res = yield api.unary(rpc_pb_service_1.RPCService.Show, req, ctx);
        return res.toObject();
    });
}
exports.show = show;
/**
 * @internal
 */
function showAll(api, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const res = yield api.unary(rpc_pb_service_1.RPCService.ShowAll, new rpc_pb_1.ShowAllRequest(), ctx);
        return res.toObject();
    });
}
exports.showAll = showAll;
/**
 * @internal
 */
function listStorageDealRecords(api, config, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const c = new rpc_pb_1.ListDealRecordsConfig();
        c.setAscending(config.ascending);
        c.setDataCidsList(config.dataCidsList);
        c.setFromAddrsList(config.fromAddrsList);
        c.setIncludeFinal(config.includeFinal);
        c.setIncludePending(config.includePending);
        const req = new rpc_pb_1.ListStorageDealRecordsRequest();
        req.setConfig(c);
        const res = yield api.unary(rpc_pb_service_1.RPCService.ListStorageDealRecords, req, ctx);
        return res.toObject();
    });
}
exports.listStorageDealRecords = listStorageDealRecords;
/**
 * @internal
 */
function listRetrievalDealRecords(api, config, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const c = new rpc_pb_1.ListDealRecordsConfig();
        c.setAscending(config.ascending);
        c.setDataCidsList(config.dataCidsList);
        c.setFromAddrsList(config.fromAddrsList);
        c.setIncludeFinal(config.includeFinal);
        c.setIncludePending(config.includePending);
        const req = new rpc_pb_1.ListRetrievalDealRecordsRequest();
        req.setConfig(c);
        const res = yield api.unary(rpc_pb_service_1.RPCService.ListRetrievalDealRecords, req, ctx);
        return res.toObject();
    });
}
exports.listRetrievalDealRecords = listRetrievalDealRecords;
/**
 * @internal
 */
function balance(api, address, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const req = new rpc_pb_4.BalanceRequest();
        req.setAddress(address);
        const res = yield api.unary(rpc_pb_service_4.RPCService.Balance, req, ctx);
        return res.toObject();
    });
}
exports.balance = balance;
//# sourceMappingURL=index.js.map